##Darmowe wykłady i serwisy z odpowiedziami
 * http://www.udacity.com/
 * https://education.10gen.com
 * http://www.uw-team.org/videoarty.html
 * http://www.itposter.net/ 
 * http://stackoverflow.com/questions/194812/list-of-freely-available-programming-books/
 * http://9fingers.pl/
 * http://devpytania.pl/
 * http://www.osqa.net/
 * http://www.digilife.be/quickreferences/indexe.html
 * http://sdjournal.org/kursy-video

##Darmowe książki po polsku i angielsku
 * https://github.com/vhf/free-programming-books/blob/master/free-programming-books-pl.md
 * https://github.com/vhf/free-programming-books/blob/master/free-programming-books.md


##Uruchamiamy skrypty:

php -f nazwa.php;

python nazwa.py;

g++ nazwa.cpp; ./a.out;

javac nazwa.java; java -cp . nazwa;

Źródła z wikipedii po polsku są wstępem do lepiej dopracowanej wiki po
angielsku (choć może nie w każdym przypadku). A ta z kolei jest wstępem 
do dalszych pozycji, można też zacząć od czytania książek, zależy od
preferencji.

###OBIEKTOWE
 * http://pl.wikipedia.org/wiki/Programowanie_obiektowe
 * http://pl.wikibooks.org/wiki/PHP/Czym_jest_programowanie_obiektowe%3F
 
###Struktury danych
 * http://www.opendatastructures.org/

###Wzorce projektowe (design patterns) Java
 * http://www.tutorialspoint.com/design_pattern/
 * http://en.wikipedia.org/wiki/Software_design_pattern
 * http://refcardz.dzone.com/refcardz/design-patterns
 * http://www.caveofprogramming.com/youtube/
 * http://stackoverflow.com/questions/382623/what-are-your-3-most-important-programming-patterns-and-why
 * http://stackoverflow.com/questions/2395315/most-important-and-frequently-used-design-patterns
 * http://www.vincehuston.org/dp/
 * http://java-design-patterns.com/patterns/
 * https://github.com/iluwatar/java-design-patterns
 * http://alexradzin.blogspot.com/2013/01/annotation-based-design-patterns.html
 
###Scala
 * http://www.grzegorzbalcerek.net/jps2
 * https://github.com/grzegorzbalcerek/scala-book-examples
 * https://www.tutorialspoint.com/scala
 * https://pavelfatin.com/design-patterns-in-scala/
 * http://www.lihaoyi.com/post/OldDesignPatternsinScala.html
 * https://twitter.github.io/effectivescala/
 * http://twitter.github.io/scala_school/
 * http://matt.might.net/articles/learning-scala-in-small-bites/
 * https://darrenjw.wordpress.com/2015/11/16/hofs-closures-partial-application-and-currying-to-solve-the-function-environment-problem-in-scala/

###JAVA
 * http://pl.wikipedia.org/wiki/Java
 * http://pl.wikibooks.org/wiki/Java
 * http://en.wikibooks.org/wiki/Java
 * http://zetcode.com/tutorials/javaswingtutorial
 * http://zetcode.com/gui/javaswt/
 * http://docs.oracle.com/javase/tutorial/java/concepts/interface.html
 * http://www.java2s.com/Code/Java/Language-Basics/Implementmultipleinterfaces.htm
 * http://www.codemiles.com/java-examples/java-interface-example-t3505.html
 * http://en.wikipedia.org/wiki/Method_overriding
 * http://www.vogella.com/articles/JavaConcurrency/article.html
 * http://en.wikipedia.org/wiki/Java_concurrency
 * http://docs.oracle.com/javase/tutorial/essential/concurrency/index.html
 * http://www.oracle.com/technetwork/articles/java/fork-join-422606.html
 * http://rashidnoorani.blogspot.com/2012/08/how-to-use-fork-join-framework-features.html
 * http://stackoverflow.com/questions/171952/is-there-a-destructor-for-java
 * http://education.wikia.com/wiki/PWr_-_Programowanie_obiektowe
 * http://wazniak.mimuw.edu.pl/index.php?title=PO_Obiektowe_modelowanie_dziedziny
 * http://wazniak.mimuw.edu.pl/index.php?title=PO_Wprowadzenie_do_programowania_obiektowego
 * http://wazniak.mimuw.edu.pl/index.php?title=PO_Klasy_i_kapsu%C5%82kowanie
 * http://wazniak.mimuw.edu.pl/index.php?title=PO_Dziedziczenie_i_interfejsy

###JAVA ORM BD
 * http://vladmihalcea.com/tutorials/hibernate/
 * http://www.slideshare.net/nosys/using-postgre-sqljavapgcon2014

###Kursy Javy po polsku:
 * http://javastart.pl/podstawy-jezyka/
 * http://javaprogramming.awardspace.com/index.php?pokaz=kurs
 * http://naukajavy.pl/kurs-jezyka-java
 * http://software.com.pl/kurs-programowania-java-czesc-i-ii-i-iii/
 * http://www.staff.amu.edu.pl/~psi/informatyka/java/kurs/kurs.html
 * http://pl.wikibooks.org/wiki/Programowanie:Java
 * http://pl.wikibooks.org/wiki/Java
 * http://aspiryna.net/category/programowanie/java/
 * http://agaykhan.republika.pl/javastart.html
 * http://www.zsme.tarnow.pl/killer/html/kurs.htm

###Książki Java:
 * http://www.webdeveloper.pl/manual_java/
 * http://helion.pl/ksiazki/praktyczny-kurs-java-wydanie-iii-marcin-lis,pkjav3.htm
 
###Książki o Javie po angielsku:
 * http://www.mindviewinc.com/Books/

###Java8
 * http://www.oracle.com/webfolder/technetwork/tutorials/obe/java/Lambda-QuickStart/index.html
 * http://www.coreservlets.com/java-8-tutorial/
 * http://viralpatel.net/blogs/lambda-expressions-java-tutorial/
 * http://www.informit.com/articles/article.aspx?p=2191423&seqNum=2
 * http://cr.openjdk.java.net/~briangoetz/lambda/lambda-state-final.html
 * http://www.oreilly.com/pub/e/3038
 * http://stuartmarks.wordpress.com/2014/06/04/java-8-lambda-and-streams-overview/
 * http://bit.ly/1eZv11J
 * http://www.infoq.com/presentations/lambda-streams-java-8?utm_source=infoq&utm_medium=slideshare&utm_campaign=slidesharelondon
 * http://openjdk.java.net/projects/sumatra/
 * https://code.google.com/p/aparapi/
 * https://github.com/pcpratts/rootbeer1
 * http://www.drdobbs.com/jvm/lambda-expressions-in-java-8/240166764
 * http://jlaskowski.blogspot.com/2014/04/o-javautilstream-przez-przykadzik-z.html
 * http://www.slideshare.net/jaceklaskowski/stackoverflow-github-twitter-reddit-i-twj-profesjonalny-rozwj
 * http://jaxenter.com/ten-subtle-best-practices-when-coding-java-108043.html
 * http://blog.informatech.cr/2013/03/24/java-streams-preview-vs-net-linq/
 * http://blog.informatech.cr/2013/03/11/java-infinite-streams/
 * http://blog.informatech.cr/2013/04/10/java-optional-objects/
 * http://blog.informatech.cr/2013/03/25/java-streams-api-preview/
 * http://cr.openjdk.java.net/~briangoetz/lambda/sotc3.html
 * http://java.dzone.com/articles/introduction-functional-1
 * http://www.infoq.com/articles/forkjoin-to-parallel-streams
 * http://www.baeldung.com/java-8-sort-lambda
 * https://www.youtube.com/watch?v=fHqTRENbpTs //streams ruppert
 * https://github.com/jOOQ/jOOL
 * http://www.jooq.org/java-8-and-sql
 * http://blog.lahteenmaki.net/2014/05/java-streams-vs-c-linq-vs-java6-updated.html
 * http://howtodoinjava.com/2014/04/18/using-comparator-becomes-easier-with-lambda-expressions-java-8/

###java8 in Android
 * http://zserge.com/blog/android-lambda.html
 * http://zserge.com/blog/gradle-maven-publish.html

###JavaEE
 * http://jaxenter.com/ten-subtle-best-practices-when-coding-java-108043.html
 * http://zeroturnaround.com/rebellabs/the-curious-coders-java-web-frameworks-comparison-spring-mvc-grails-vaadin-gwt-wicket-play-struts-and-jsf/2/
 * http://vschart.com/compare/node-js/vs/spring-framework
 * http://www.oracle.com/technetwork/java/javaee/documentation/index-137726.html
 * http://www.vogella.com/articles/JavaServerFaces/article.html
 * http://myfaces.apache.org/docindex.html

###Eclipse Maven
 * http://stackoverflow.com/questions/2061094/importing-maven-project-into-eclipse

###Parallel Problems
 * http://adit.io/posts/2013-05-11-The-Dining-Philosophers-Problem-With-Ron-Swanson.html
 * http://coopsoft.com/ar/Calamity2Article.html


###HTTPD  JAVA
 * http://code.google.com/p/spark-java
 * git clone git://github.com/perwendel/spark.git
 * http://wiki.eclipse.org/Jetty/Tutorial/Embedding_Jetty
 * http://kcd.sytes.net/articles/simple_web_server.php
 * http://simple.sourceforge.net/
 * http://sourceforge.net/projects/winstone/
 * http://winstone.sourceforge.net/
 * http://tjws.sourceforge.net/
 * http://stackoverflow.com/questions/1186328/embedded-http-server-in-swing-java-app
 * http://scalatra.org/
 
###FORK JAVA
 * http://www.oracle.com/technetwork/articles/java/fork-join-422606.html
 * http://docs.oracle.com/javase/tutorial/essential/concurrency/forkjoin.html
 * http://jaceklaskowski.pl/prezentacje/JacekLaskowski-EclipseDemoCamp2011-ConcurrencyUtilitiesJava7-2011.11.08.pdf
 * http://akuma.kohsuke.org/
 * http://www.javacodegeeks.com/2011/02/java-forkjoin-parallel-programming.html
 
##THREADS
 * http://pl.wikipedia.org/wiki/W%C4%85tek_%28informatyka%29
 
###THREAD JAVA
 * http://kodatnik.blogspot.com/2011/06/watki-w-javie-podstawy.html
 * http://sourceforge.net/projects/javaconcurrenta/?source=dlp
 
###SHELL JAVA
 * http://code.google.com/p/cliche/

##Video Java dla opornych:
 * http://www.youtube.com/watch?v=8stFGEMs7sg
 * http://www.youtube.com/watch?v=hd8zD6Q55qM
 * http://www.youtube.com/watch?v=SaFf9s_QgRA
 * http://www.youtube.com/watch?v=sbqxXuTyygo
 * http://www.youtube.com/watch?v=I1qTXwFhMhg
 * http://www.youtube.com/watch?NR=1&v=EfVLMmVuxKU
 * http://www.youtube.com/watch?v=xUIqNPeIeeA - tu blad na koncu liczba calkowita integer nie ma czesci ulamkowej
 * http://www.youtube.com/watch?v=0Um94CxSjZA
 * http://www.youtube.com/watch?v=HkX_2w4QMSs
 * http://www.youtube.com/watch?v=L5un9tlUIk0
 * http://www.youtube.com/watch?v=88Bx9pAcQLY
 * http://www.youtube.com/watch?v=uuieisA61Jo
 * http://www.youtube.com/watch?v=pFr3EdO1YDI - klasy
 * http://www.youtube.com/watch?v=ZgypUlLaajc
 * http://www.youtube.com/watch?v=_lhXFewk0Oc
 * http://www.youtube.com/watch?v=3cpGgV6Mh-k - konstruktory
 * http://www.youtube.com/watch?v=inqrELxBwjY
 * http://www.youtube.com/watch?v=bb1NFAbRvLM
 * http://www.youtube.com/watch?v=Ou-uSwWHmfg
 * http://www.youtube.com/watch?v=M1ltjIzDCqk
 * http://www.youtube.com/watch?v=Z6aqu7fAhBk
 * http://www.youtube.com/watch?v=Yls_Ygrl9aQ
 * http://www.youtube.com/watch?v=ZIE4Fy2iyhg
 * http://www.youtube.com/watch?v=GteZd0_77W8
 * http://www.youtube.com/watch?v=2xpBK1C3KyU
 * http://www.youtube.com/watch?v=z4Ay88qsbqQ
 * http://www.youtube.com/watch?v=Tk-Tf4mLptM
 * http://www.youtube.com/watch?v=4_lS8N5mYTk
 * http://www.youtube.com/watch?v=NR2GLazGk78
 * http://www.youtube.com/watch?v=lMOJY0Gpe1k - tablice wielowymiarowe
 * http://www.youtube.com/watch?v=UUSJkEYCNr4 - zmienna liczba argumentów
 * http://www.youtube.com/watch?v=8fEF8dLcagU - private, public, this
 * http://www.youtube.com/watch?v=Ly25ffl-iZc - przeci±¿enie konstruktorów!!!
 * http://www.youtube.com/watch?NR=1&v=_PxVrzd_gtQ - static
 * http://www.youtube.com/watch?NR=1&v=HrJUqutV8qA - dziedziczenie - BARDZO
 * WAZNY!
 * http://www.youtube.com/watch?v=P7F9BLY_awo - rekurencja
 * http://www.youtube.com/watch?v=p4Bd5B8jQqU - metody generyczne

##Kurs Javy po angielsku, ale bdb:
 * http://math.hws.edu/javanotes/
 * http://java.sun.com/docs/books/tutorial/
 * http://www.javaranch.com/
 * http://www.javapassion.com/portal/
 * http://viralpatel.net/blogs/lambda-expressions-java-tutorial/

